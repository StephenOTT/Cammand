@using MainApp.Components.ProcessDefinition
@using Camunda.Http.Api
@using Camunda.Http.Api.Model
@using System.Text
@using System.IO
@using System.Text.Json
@using Formio.Components
@using MainApp.Components.Form
@using Color = MudBlazor.Color

@inject AppData AppData

<MudGrid>
    <MudItem xs="12">
        <MudCard>
            <MudCardContent>
                <MudGrid>
                    <MudItem xs="12">
                        <MudCheckBox TValue="bool" @bind-Checked="@_includeVariablesInResponse" Color="Color.Primary">Include Variables in Response</MudCheckBox>
                    </MudItem>
                    <MudItem xs="12">
                        <MudCheckBox TValue="bool" @bind-Checked="@_submitVariablesAsJson" Color="Color.Primary">Submit Variables as Json (unchecked submits as individual variables)</MudCheckBox>
                    </MudItem>
                    <MudItem xs="12">
                        <MudCheckBox TValue="bool" @bind-Checked="@_submitAsTransient" Color="Color.Primary">Submit Variables as Transient</MudCheckBox>
                    </MudItem>
                </MudGrid>
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem xs="12">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>Form</CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <StartForm Camunda="@Camunda" ProcessDefinitionId="@ProcessDefinitionId" OnFormSubmit="@OnFormSubmit"></StartForm>
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem xs="12">

        @if (_startedProcessInstanceResponse != null)
        {
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>Started Process Instance Info</CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudTextField T="string" Variant="Variant.Filled" Disabled="true" Text="@_startedProcessInstanceResponse" Lines="15"/>
                </MudCardContent>
            </MudCard>
        }
    </MudItem>
</MudGrid>


@code {

    [Parameter]
    public string ProcessDefinitionId { get; set; }

    [Parameter]
    public CamundaClient Camunda { get; set; }

    protected override void OnInitialized()
    {
        Camunda = AppData.CamundaClient;
    }

    private string _startedProcessInstanceResponse;

    private bool _includeVariablesInResponse = false;

    private bool _submitVariablesAsJson = true;

    private bool _submitAsTransient = false;


    private async Task OnFormSubmit(FormSubmission submission)
    {
        try
        {
            var variablesForSubmit = new Dictionary<string, VariableValueDto>();
            if (_submitVariablesAsJson)
            {
                variablesForSubmit.Add(
                    "startFormSubmission",
                    new VariableValueDto(
                        JsonSerializer.Serialize(submission),
                        "json",
                        new Dictionary<string, object> {{"transient", _submitAsTransient}}));
            }
            else
            {
                foreach (var jsonProperty in submission.Data.RootElement.EnumerateObject())
                {
                    variablesForSubmit.Add(jsonProperty.Name, FormUtils.CreateVariableValue(jsonProperty.Value, _submitAsTransient));
                }
            }

            var response = await Camunda.Api.ProcessDefinitionApi.StartProcessInstanceAsync(ProcessDefinitionId, new StartProcessInstanceDto
            {
                Variables = variablesForSubmit,
                WithVariablesInReturn = _includeVariablesInResponse
            });

            _startedProcessInstanceResponse = response.ToJson();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

}