@using MainApp.Components.ProcessDefinition
@using Camunda.Http.Api
@using Camunda.Http.Api.Model
@using System.Text
@using System.IO
@using System.Text.Json
@using Formio.Components
@using MainApp.Components.Form
@using Margin = Blazorise.Margin

@inject AppData AppData
<Card Margin="Margin.Is1.FromBottom">
    <CardBody>
        <Container>
            <Row>
                <Column>
                    <Check TValue="bool" @bind-Checked="@_includeVariablesInResponse">Include Variables in Response</Check>
                </Column>
            </Row>
            <Row>
                <Column>
                    <Check TValue="bool" @bind-Checked="@_submitVariablesAsJson">Submit Variables as Json (unchecked submits as individual variables)</Check>
                </Column>
            </Row>
            <Row>
                <Column>
                    <Check TValue="bool" @bind-Checked="@_submitAsTransient">Submit Variables as Transient</Check>
                </Column>
            </Row>
        </Container>
    </CardBody>
</Card>

<Card>
    <CardHeader>
        <CardTitle>Form</CardTitle>
    </CardHeader>
    <CardBody>
        <StartForm Camunda="@Camunda" ProcessDefinitionId="@ProcessDefinitionId" OnFormSubmit="@OnFormSubmit"></StartForm>
    </CardBody>
</Card>

@if (_startedProcessInstanceResponse != null)
{
    <Card Margin="Margin.Is1.FromTop">
        <CardHeader>
            <CardText>Started Process Instance Info</CardText>
        </CardHeader>
        <CardBody>
            <MemoEdit ReadOnly="true" @bind-Text="@_startedProcessInstanceResponse" Rows="10"></MemoEdit>
        </CardBody>
    </Card>
}


@code {

    [Parameter]
    public string ProcessDefinitionId { get; set; }

    [Parameter]
    public CamundaClient Camunda { get; set; }

    protected override void OnInitialized()
    {
        Camunda = AppData.CamundaClient;
    }

    private string _startedProcessInstanceResponse;

    private bool _includeVariablesInResponse = false;

    private bool _submitVariablesAsJson = true;

    private bool _submitAsTransient = false;


    private async Task OnFormSubmit(FormSubmission submission)
    {
        try
        {
            var variablesForSubmit = new Dictionary<string, VariableValueDto>();
            if (_submitVariablesAsJson)
            {
                variablesForSubmit.Add(
                    "startFormSubmission", 
                    new VariableValueDto(
                        JsonSerializer.Serialize(submission), 
                        "json",
                        new Dictionary<string, object> {{"transient", _submitAsTransient}}));
            }
            else
            {
                foreach (var jsonProperty in submission.Data.RootElement.EnumerateObject())
                {
                    variablesForSubmit.Add(jsonProperty.Name, FormUtils.CreateVariableValue(jsonProperty.Value, _submitAsTransient));
                }
            }

            var response = await Camunda.Api.ProcessDefinitionApi.StartProcessInstanceAsync(ProcessDefinitionId, new StartProcessInstanceDto
            {
                Variables = variablesForSubmit,
                WithVariablesInReturn = _includeVariablesInResponse
            });

            _startedProcessInstanceResponse = response.ToJson();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

}