@using Camunda.Http.Api
@using Camunda.Http.Api.Model


<DataGrid TItem="HistoricJobLogDto" 
          Data="@jobs" 
          ReadData="@OnReadData" 
          ShowPager="true" 
          TotalItems="@totalJobs" 
          PageSize="@PageSize"
          @bind-SelectedRow="@selectedJob"
          DetailRowTrigger="@((dto) => dto.Id == selectedJob?.Id)">
    <EmptyTemplate>
        <div class="box">
            No Historic Job Logs found!
        </div>
    </EmptyTemplate>

    <LoadingTemplate>
        <div class="box">
            Loading...
        </div>
    </LoadingTemplate>

    <ChildContent>
        <DataGridColumn TItem="HistoricJobLogDto" Field="@nameof(HistoricJobLogDto.Id)" Caption="Job Log Id" />
        <DataGridDateColumn TItem="HistoricJobLogDto" Field="@nameof(HistoricJobLogDto.Hostname)" Caption="Hostname" />
        <DataGridDateColumn TItem="HistoricJobLogDto" Field="@nameof(HistoricJobLogDto.Timestamp)" Caption="Timestamp" />
        <DataGridColumn TItem="HistoricJobLogDto" Field="@nameof(HistoricJobLogDto.ActivityId)" Caption="Activity Id" />
        <DataGridColumn TItem="HistoricJobLogDto" Field="@nameof(HistoricJobLogDto.JobId)" Caption="Job Id" />
        <DataGridColumn TItem="HistoricJobLogDto" Field="@nameof(HistoricJobLogDto.JobPriority)" Caption="Job Priority" />
        <DataGridDateColumn TItem="HistoricJobLogDto" Field="@nameof(HistoricJobLogDto.JobDueDate)" Caption="Job Due Date" />
        <DataGridColumn TItem="HistoricJobLogDto" Field="@nameof(HistoricJobLogDto.Id)" Caption="Log Type">
            <DisplayTemplate>
                <Text>@LogTypeText(context)</Text>
            </DisplayTemplate>
        </DataGridColumn>
    </ChildContent>
    
    <DetailRowTemplate>
        <Card>
            <CardHeader><CardTitle>Job Details</CardTitle></CardHeader>
            <CardBody>
                <Paragraph>Failed Activity Id: @context.FailedActivityId</Paragraph>
                <Paragraph>Job Def Config: @context.JobDefinitionConfiguration</Paragraph>
                <Paragraph>Job Def Id: @context.JobDefinitionId</Paragraph>
                <Paragraph>Job Retries: @context.JobRetries</Paragraph>
                <Paragraph>Job Exception Message: @context.JobExceptionMessage</Paragraph>
            </CardBody>
        </Card>
    </DetailRowTemplate>
</DataGrid>


@code {

    [Parameter]
    public CamundaClient Camunda { get; set; }

    [Parameter]
    public int PageSize { get; set; } = 25;

    [Parameter]
    public string ProcessInstanceId { get; set; }

    private List<HistoricJobLogDto> jobs;

    private HistoricJobLogDto selectedJob;

    private int totalJobs;

    async Task OnReadData(DataGridReadDataEventArgs<HistoricJobLogDto> e)
    {
        jobs = await Camunda.Api.HistoricJobLogApi.GetHistoricJobLogsAsync(
            processInstanceId: ProcessInstanceId,
            sortBy: "timestamp",
            sortOrder: "desc"
            );

        totalJobs = Convert.ToInt32((await Camunda.Api.HistoricIncidentApi.GetHistoricIncidentsCountAsync(processInstanceId: ProcessInstanceId)).Count);

        StateHasChanged();
    }

    private string LogTypeText(HistoricJobLogDto log)
    {
        if (log.CreationLog == true)
        {
            return "Creation";
        } else if (log.DeletionLog == true)
        {
            return "Deletion";
        } else if (log.FailureLog == true)
        {
            return "Failure";
        } else if (log.SuccessLog == true)
        {
            return "Failure";
        }
        else
        {
            Console.Error.WriteLine("Unknown Historic Job Log DTO Log type: " + log.ToJson());
            return "?";
        }
    }


}
