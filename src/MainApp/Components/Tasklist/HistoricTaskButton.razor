@using Camunda.Http.Api.Model
@using Button = Blazorise.Button

<Button @ref="@_theButton" 
        @bind-Loading="@_isLoading" 
        Clicked="@OnClaimClicked" 
        @bind-disabled="@_isDisabled"
        @attributes="@AdditionalAttributes"
        >@ChildContent</Button>

@code {

    [Parameter]
    public HistoricTaskInstanceDto UserTask { get; set; }
    
    [Parameter]
    public EventCallback Clicked { get; set; }
    
    [Parameter]
    public Func<HistoricTaskInstanceDto, bool> DisabledTrigger { get; set; } = _ => false;
    
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    
    [Parameter(CaptureUnmatchedValues = true)]
    public IReadOnlyDictionary<string, object> AdditionalAttributes { get; set; }

    private Button _theButton;
    
    private bool _isLoading;
    
    private bool _isDisabled;

    protected override void OnParametersSet()
    {
        if (DisabledTrigger.Invoke(UserTask))
        {
            _isDisabled = true;
        }   
    }

    private async Task OnClaimClicked()
    {
        _isLoading = true;

        await Clicked.InvokeAsync()
            .ContinueWith(t =>
            {
                _isLoading = false;
            });
    }

}
